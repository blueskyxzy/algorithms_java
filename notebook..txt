编程题技巧

1.动态规划

2.n&(n-1)的运用
   2.1：求一个int类型数是否为2的幂
       n&(n-1)==0
   2.1：一个数的二进制中有多少位为1
       while（n>0）{
       count++;
       n = n&(n-1);
       }
   2.3:一个数是否为4的幂

      4的幂的充要条件，即 n>0 && ((n&(n-1))==0) && ((n-1)%3==0)
   2.4:还有一些可以用到符号&运算的例子，
      比如求一个数32位二进制的倒序
      int result =0；
      for（int i=0；i<32；i++）{
             result<<=1;//result先左移一位，低位补0
             result = result+(n&1)；
           n>>=1;//n右移一位，高位补0

      }
   2.5:将一个数表示为16进制,并返回相应字符串
      if(n==0) return "0";
      String  result =""；
      String[] map={"0"，"1"，"2"，"3"，"4"，"5"，"6"，"7"，"8"，"9"，"a"，"b"，"c"，"d"，"e"，"f"};
      while（n!=0）{
          result = map[n&15]+result;
          n>>=4;
      }

3.