一：分类
算法
数学
数据结构
系统设计

二：数据结构
数组和链表是根本
数组
链表 单/双向链表
队列
堆  最大堆 ／ 最小堆
栈
树  二叉树
图
字符串：前缀树（字典树） ／ 后缀树

三：常用的思想方法
穷举法
动态规划
递推算法
递归
分治算法思想
概率算法思想
回溯法
迭代算法（辗转法）
贪心算法思想
图算法
二分法
DFS & BFS
状态压缩
剪枝

四：基础
基础技巧：分治、二分、贪心
排序算法：快速排序、归并排序、计数排序
搜索算法：回溯、递归、深度优先遍历，广度优先遍历，二叉搜索树等
图论：最短路径、最小生成树
动态规划：背包问题、最长子序列

五：模型
1.数组，链表操作
遍历
遍历：
迭代伪代码：

当前指针 =  头指针
while 当前节点不为空 {
   print(当前节点)
   当前指针 = 当前指针.next
}

一个前序遍历的递归的伪代码：

dfs(cur) {
    if 当前节点为空 return
    print(cur.val)
    return dfs(cur.next)
}

反转：
数组的反转容易，头尾双指针+交换
反转链表：头尾指针+子交换指针+递归
链表是递归的数据结构， 很多链表问题天生具有递归性，比如反转链表，因此仅仅画出一个子结构就可以了

2：树
二叉树的三种流行的遍历方法，分别是前序遍历，中序遍历和后序遍历
